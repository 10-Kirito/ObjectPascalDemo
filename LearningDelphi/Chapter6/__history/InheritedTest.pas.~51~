unit InheritedTest;

interface
uses
  Rtti, Generics.Defaults, Generics.Collections, Classes;

type

  TBase = class(TObject)
    procedure Func();
  public
    procedure Func2();
  published
    procedure Func3();
  end;

  TTest1 = class
    procedure Func();
  end;

  TTest2 = class
  private
    procedure Func();
  end;

  Test3 = class(TTest2)
    procedure Func();
  public
    procedure HelloWorld();
  end;

procedure MainTest();

implementation

{ Base }

procedure TBase.Func;
begin
  Writeln('Base.Func is called');
end;

procedure TBase.Func2;
begin
  Writeln('Base.Func2 is called');
end;

procedure TBase.Func3;
begin
  Writeln('Base.Func3 is called!');
end;

procedure MainTest();
var
  TestObj: TBase;
begin
  TestObj.Func;
end;
{ Test1 }

procedure TTest1.Func;
begin
  Writeln('Test1.Func is called!');
end;

{ Test2 }

procedure TTest2.Func;
begin
  Writeln('Test2.Func is called!');
end;

{ Test3 }
                     
procedure Test3.Func;
begin
  Writeln('Test3.Func is called!');
  inherited Func();
end;

procedure Test3.HelloWorld;
begin
  Writeln('Hello, world!');
end;

end.

